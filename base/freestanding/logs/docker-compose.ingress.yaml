version: "3.7"
services:
  postgrest:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.logserver-${COMPOSE_PROJECT_NAME}.rule=Host(`logs.${BASE_DOMAIN:-localtest.me}`)"
      - "traefik.http.routers.logserver-${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.logserver-${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.logserver-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"


      - "traefik.http.routers.logserver-${COMPOSE_PROJECT_NAME}.middlewares=logserver-${COMPOSE_PROJECT_NAME}-forwardauth"
      - "traefik.http.middlewares.logserver-${COMPOSE_PROJECT_NAME}-forwardauth.forwardauth.address=http://oidc-proxy:4181"
      - "traefik.http.middlewares.logserver-${COMPOSE_PROJECT_NAME}-forwardauth.forwardauth.authResponseHeaders=X-Forwarded-User"
    networks:
      - ingress
      - internal


  postgres:
    networks:
      - internal


  oidc-proxy:
    image: thomseddon/traefik-forward-auth:2
    environment:
      DEFAULT_PROVIDER: oidc
      PROVIDERS_OIDC_CLIENT_ID: logserver
      PROVIDERS_OIDC_CLIENT_SECRET: 821bd668-5e17-4372-a4bd-005838b8c7f7
      PROVIDERS_OIDC_ISSUER_URL: https://keycloak.${BASE_DOMAIN}/auth/realms/fEMR

      SECRET: HtW5SpDTCIGRdv9oc98Ruw==
      # Example assumes no https, do not use in production
      INSECURE_COOKIE: "true"
    networks:
      - ingress
      - internal


networks:
  # internal network for backing services
  internal:

  # ingress network
  ingress:
    external: true
    name: external_web
