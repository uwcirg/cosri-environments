version: "3.7"
services:
  frontend:
    image: uwcirg/cosri-summary:${FRONTEND_IMAGE_TAG:-latest}
    environment:
      # confidential backend API endpoint
      # NB: domain is required for cookies to be set
      REACT_APP_CONF_API_URL: "https://backend.${BASE_DOMAIN:-localtest.me}"

      REACT_APP_SECTION_HISTORICALTREATMENTS: hidden
      REACT_APP_SECTION_NONPHARMACOLOGICTREATMENTS: hidden
      REACT_APP_SUBSECTION_URINEDRUGSCREENS: hidden
      REACT_APP_SUBSECTION_NALOXONEMEDICATIONS: hidden
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-${COMPOSE_PROJECT_NAME}.rule=Host(`frontend.${BASE_DOMAIN:-localtest.me}`)"
      - "traefik.http.routers.frontend-${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.frontend-${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.frontend-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"
    networks:
      - ingress

  backend:
    image: uwcirg/sof-api-wrapper:${BACKEND_IMAGE_TAG:-develop}
    environment:
      # client ID registered with SoF host
      SOF_CLIENT_ID: ${SOF_CLIENT_ID:-cosri_openid_client}
      SOF_CLIENT_SECRET: ${SOF_CLIENT_SECRET:-cosri_openid_client_secret}
      # do not pass launch/patient or Epic will infer standalone launch
      SOF_CLIENT_SCOPES: ${SOF_CLIENT_SCOPES:-patient/*.read launch openid profile}
      # ultimate destination after SoF launch and backend auth
      LAUNCH_DEST: 'https://frontend.${BASE_DOMAIN:-localtest.me}/launch.html'

      LOGSERVER_URL: "https://logs.${BASE_DOMAIN:-localtest.me}"
      PREFERRED_URL_SCHEME: https

      PDMP_URL: 'http://pdmp:8008'
      SESSION_REDIS: redis://redis:6379/0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-${COMPOSE_PROJECT_NAME}.rule=Host(`backend.${BASE_DOMAIN:-localtest.me}`)"
      - "traefik.http.routers.backend-${COMPOSE_PROJECT_NAME}.entrypoints=websecure"
      - "traefik.http.routers.backend-${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.backend-${COMPOSE_PROJECT_NAME}.tls.certresolver=letsencrypt"
    networks:
      - ingress
      - internal
    depends_on:
      - redis
      - pdmp

  redis:
    image: redis
    networks:
      - internal

  pdmp:
    image: uwcirg/script-fhir-facade:${PDMP_IMAGE_TAG:-develop}
    environment:
      RXNAV_LOOKUP_ENABLED: "true"
      REQUEST_CACHE_URL: redis://redis:6379/0
    volumes:
      - ./config/pdmp:/opt/app/config:ro
    networks:
      internal:
        aliases:
          - pdmp-internal
    depends_on:
      - redis

networks:
  # internal network for backing services
  internal:

  # ingress network
  ingress:
    external: true
    name: external_web
