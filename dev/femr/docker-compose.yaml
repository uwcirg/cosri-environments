version: "3.7"
services:
  ingress:
    image: "traefik:v2.2"
    command:
      #- "--log.level=DEBUG"

      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=ingress-network"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      # web UI
      - "8080:8080"
    volumes:
      - "certificate-data:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - ingress-network


  dashboard:
    image: uwcirg/cosri-patientsearch:develop
    environment:
      SECRET_KEY: lknyrrtehpyjtyjojwjbnblewth
      OIDC_CLIENT_SECRETS: '
        {"web": {
          "auth_uri": "https://keycloak.${BASE_DOMAIN:-localtest.me}/auth/realms/fEMR/protocol/openid-connect/auth",
          "client_id": "femr_openid_client",
          "client_secret": "92e9861c-a2f3-40dd-8872-e2ee57a55afe",
          "issuer": "https://keycloak.${BASE_DOMAIN:-localtest.me}/auth/realms/fEMR",
          "redirect_uris": ["https://keycloak.${BASE_DOMAIN:-localtest.me}/oidc_callback"],
          "userinfo_uri": "https://keycloak.${BASE_DOMAIN:-localtest.me}/auth/realms/fEMR/protocol/openid-connect/userinfo",
          "token_uri": "https://keycloak.${BASE_DOMAIN:-localtest.me}/auth/realms/fEMR/protocol/openid-connect/token",
          "token_introspection_uri": "https://keycloak.${BASE_DOMAIN:-localtest.me}/auth/realms/fEMR/protocol/openid-connect/token/introspect"
        }}'
      EXTERNAL_FHIR_API: 'http://pdmp:8008/v/r2/fhir/'
      # FHIR URL queried by PDMP integration backend
      MAP_API: 'https://fhir.${BASE_DOMAIN:-localtest.me}/hapi-fhir-jpaserver/fhir/'
      # FHIR URL passed to SoF client
      SOF_HOST_FHIR_URL: 'https://fhir.${BASE_DOMAIN:-localtest.me}/hapi-fhir-jpaserver/fhir/'
      SOF_CLIENT_LAUNCH_URL: 'https://backend.${BASE_DOMAIN:-localtest.me}/auth/launch'
    depends_on:
      - ingress
      - keycloak
      - pdmp
    labels:
      traefik.enable: 'true'
      traefik.http.routers.dashboard.rule: Host(`dashboard.${BASE_DOMAIN:-localtest.me}`)
      traefik.http.routers.dashboard.entrypoints: web
    networks:
      - ingress-network
      - internal


  keycloak:
    image: jboss/keycloak:9.0.0
    labels:
      traefik.enable: 'true'
      traefik.http.routers.keycloak.rule: Host(`keycloak.${BASE_DOMAIN:-localtest.me}`)
      traefik.http.routers.keycloak.entrypoints: web
    command:
      - "-b"
      - "0.0.0.0"
      - "-Dkeycloak.migration.action=import"
      # todo: use dir migration provider (`keycloak.migration.provider=dir`)
      # https://github.com/keycloak/keycloak-documentation/blob/master/server_admin/topics/export-import.adoc
      - "-Dkeycloak.migration.provider=singleFile"
      - "-Dkeycloak.profile.feature.upload_scripts=enabled"
      - "-Dkeycloak.migration.file=/tmp/realm-data.json"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
    environment:
      KEYCLOAK_HOSTNAME: "keycloak.${BASE_DOMAIN:-localtest.me}"
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: postgres
      DB_ADDR: db
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
    volumes:
      - "./config/keycloak/realm-data.json:/tmp/realm-data.json"
    depends_on:
      - db
      - ingress
      - fhir
    networks:
      - ingress-network
      - internal


  fhir:
    image: uwcirg/hapi-fhir-oauth2-starter
    environment:
      JAVA_OPTIONS: "-Dhapi.properties=/opt/hapi.properties"
      HAPI_SERVER_ADDRESS: 'https://fhir.${BASE_DOMAIN:-localtest.me}/hapi-fhir-jpaserver/fhir/'

    volumes:
      - "./config/fhir/hapi.properties:/opt/hapi.properties:ro"
    depends_on:
      - db
      - ingress
    labels:
      traefik.enable: 'true'
      traefik.http.routers.fhir.rule: Host(`fhir.${BASE_DOMAIN:-localtest.me}`)
      traefik.http.routers.fhir.entrypoints: web
    networks:
      - ingress-network
      - internal


  pdmp:
    image: uwcirg/script-fhir-facade
    volumes:
      - ./config/pdmp:/opt/app/config:ro
    networks:
      - internal


  db:
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - "db-data:/var/lib/postgresql/data"
      # create keycloak and HAPI application databases
      - "./config/db:/docker-entrypoint-initdb.d"
    networks:
      - internal

volumes:
  db-data:
  certificate-data:

networks:
  # internal network for backing services
  internal:

  ingress-network:
    # override COMPOSE_PROJECT_NAME namespacing; use exact network name
    name: ingress-network
