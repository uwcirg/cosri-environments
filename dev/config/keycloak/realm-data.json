[
  {
    "id": "master",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "36ca1eb6-2474-4bde-82b2-a424a8a5131e",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "4c0dab8c-bd06-4554-be72-58bc0a7eaaec",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": ["create-realm"],
            "client": {
              "Stayhome-realm": [
                "view-identity-providers",
                "manage-events",
                "manage-identity-providers",
                "impersonation",
                "manage-users",
                "query-realms",
                "view-realm",
                "query-groups",
                "manage-realm",
                "manage-clients",
                "manage-authorization",
                "query-users",
                "query-clients",
                "view-users",
                "view-authorization",
                "view-events",
                "view-clients",
                "create-client"
              ],
              "master-realm": [
                "view-identity-providers",
                "manage-users",
                "query-users",
                "query-realms",
                "manage-identity-providers",
                "manage-events",
                "view-realm",
                "manage-realm",
                "query-clients",
                "view-users",
                "view-events",
                "manage-authorization",
                "manage-clients",
                "create-client",
                "impersonation",
                "view-authorization",
                "query-groups",
                "view-clients"
              ]
            }
          },
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "2d985540-b661-45d1-9a6f-6d1a6703d5d6",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "73559c0a-b06b-4efd-8582-1a0d414230b0",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "Stayhome-realm": [
          {
            "id": "d2ff90b3-fad8-4eea-acf2-844a76ad2ca2",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "cd29622d-10dd-445f-9fdb-843e327a06a2",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "18cf6fab-7aa0-4305-9268-83148b58f7fe",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "ca1b9afe-ab73-479e-a9eb-04ea11457ce3",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "ff2a2afd-7b39-47ce-b786-e3e0feff7857",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "680b89ab-8eca-4f7f-a8c9-d57c326dc7bd",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "fb4df10e-5ede-4480-91d1-2453c21b82a7",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "3f6c217a-4b43-47ad-a6b6-55a2bbb11c4c",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "8bcf5a74-61b5-44ad-8d2a-e9fafd9552fe",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "fd49fad2-92b5-4901-8d86-4eb10e47710b",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "e4ac96b5-635d-46e5-aac5-7afb3b8e8520",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "e4aa75f7-096d-44f0-b857-b7cb60701227",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "bfd70ecd-0660-427c-aa21-1a4cf03fe0c2",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "40b82635-f3e0-4813-b44e-add85c4b964e",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "6d7f4ea4-94e9-4c73-bad7-259749aeadc4",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "ed28fc20-1c73-4c0f-8dcd-046ee4b8c370",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "Stayhome-realm": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "5df81a46-41cd-4351-ba6a-0191b905eed8",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          },
          {
            "id": "dea60cc5-b450-49a8-b5a4-494ebe6b9727",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "Stayhome-realm": ["query-users", "query-groups"]
              }
            },
            "clientRole": true,
            "containerId": "a7661de8-56b9-45d6-805e-629688bf9b65",
            "attributes": {}
          }
        ],
        "broker": [
          {
            "id": "e9ed6dbb-4323-4d81-8a07-48015b8f9b9b",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "31e2083d-c12b-4c64-bccd-6a04f4c951cc",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "e724511c-a15f-4c26-bff0-8025eb77f201",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "16382256-07e2-4a3f-8b46-d21486b286f9",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "57caeafe-3b7e-434c-8064-1a76e2ac4957",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "b390375a-9fc8-4c39-9b70-7b13e636e505",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "0676e182-3d6a-4594-817d-e74928c3f7ab",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "2da094f9-a29a-4ed2-8669-936ab507b4e5",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "f47a97fa-61f2-4c93-8501-bdfa231d0f84",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "206020fb-aa63-4f6f-a49d-26aa9f033331",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "f8dfec27-e8ad-4602-afbe-c220671fb51a",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "10acc409-e5fb-4654-a053-2bc0c79e4c6b",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "4b433b6e-5148-4be0-ac0d-4f035d9b4459",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "cbbbefb2-07d0-4551-9288-c3a5bf015fb7",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "45ab9bb3-8847-4a74-a505-0bbbd6c57420",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "c234127f-b039-4de0-9b7a-88f3369c6bc9",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": ["query-users", "query-groups"]
              }
            },
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "042bd97c-baaa-4dca-8510-118060cba863",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "68f7aa9d-4562-438c-be73-1a3adfca36d9",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "f0c13938-a6af-427b-8ac5-87c5081a510f",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          },
          {
            "id": "cf42e8e5-d64c-4a68-b799-7ace1cc8b174",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "2ebd5794-8f8a-4306-8e1b-30e89f0c6382",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
            "attributes": {}
          },
          {
            "id": "82b493a5-2017-49a4-8df7-f54b0d7eb41f",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
            "attributes": {}
          },
          {
            "id": "4a4ff509-0b39-4621-8c3f-0ae3d55da4d4",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
            "attributes": {}
          },
          {
            "id": "3cbb52ae-0127-4c2f-b02e-0fe88196d25a",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["manage-account-links"]
              }
            },
            "clientRole": true,
            "containerId": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
            "attributes": {}
          },
          {
            "id": "e095c4dc-0047-4276-b212-b8fb81a0f71b",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["view-consent"]
              }
            },
            "clientRole": true,
            "containerId": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
            "attributes": {}
          },
          {
            "id": "ea93f272-e2f0-4be1-839a-b9fa115d2978",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": ["offline_access", "uma_authorization"],
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "b4f50b39-bbdf-421b-b6fc-661dfcfaba51",
        "createdTimestamp": 1584919318976,
        "username": "admin",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "credentials": [
          {
            "id": "5b943988-e886-444c-8960-5814fee65edc",
            "type": "password",
            "createdDate": 1584919319136,
            "secretData": "{\"value\":\"55tqcLrrilSq+i4weuTlFoYQLtsQAboobcmFqVj7aGBjrOIw3oHGDJ2bCNbEtlmQP77T4888BzyE/oyVJxKuHA==\",\"salt\":\"1538jzorMYabL89L7Bu0Vg==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["offline_access", "admin", "uma_authorization"],
        "clientRoles": {
          "account": ["view-profile", "manage-account"]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": ["offline_access"]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": ["manage-account"]
        }
      ]
    },
    "clients": [
      {
        "id": "a7661de8-56b9-45d6-805e-629688bf9b65",
        "clientId": "Stayhome-realm",
        "name": "Stayhome Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "11e38d06-3e3b-4c53-b58a-f371f359b25a",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "463eac7c-dd52-4cad-88d8-5e4f39dd5010",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "715310a8-bdc7-4dcd-a53e-5cbb9ded5f49",
        "defaultRoles": ["view-profile", "manage-account"],
        "redirectUris": ["/realms/master/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "16716a08-cd37-47bb-b5d5-eff24e6dc5a9",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "c7fd1e33-6469-4bc1-a7aa-4a20b581d0c1",
        "redirectUris": ["/realms/master/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "ac182be7-734c-44af-976d-e83360563ef9",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "d94bcd6a-b984-4105-ba70-a81f048bce5f",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "fd917cb4-5fb7-4920-92d9-993c23513e5c",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "31e2083d-c12b-4c64-bccd-6a04f4c951cc",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "79e3a542-1719-43e2-8af2-0c11a4234fa2",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "6ba50d66-4b95-4142-9c13-3349d61ec7ec",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "f702d993-5dd2-44fa-b457-87c831fcaa72",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "bd25bfe2-adb1-461b-99a2-13e5901ee9e4",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "25f1ffa4-20a0-47b7-9966-aca02e5ffe1a",
        "redirectUris": ["/admin/master/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "2ca68fe1-58b4-484e-8e71-f005d96e4a54",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "0107bbb6-92e0-481c-8819-9d42f54c3bb9",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "83a706d4-1d01-4460-8d34-9ea03189c52a",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f5a5f6b3-1872-426f-b23c-75ddbe2e8e55",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "8f43cf6e-c8c4-4bb0-b295-946750b667c0",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "9f11f0f3-2b8e-49af-88ce-16694b4ca5d8",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "4e5182b1-348e-4da1-9130-2dcf3bcef70a",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "6a8522ee-860c-463c-86f2-a260b0c41718",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "02e244b1-5d03-4d62-b71f-6541ec2954a8",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "8ee6ff92-6a48-461a-af5d-6876aa1a92c4",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "9f8f7285-81e0-474f-bd8a-491a918cb40f",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "1651a6d7-5287-42f4-83db-c3ab0237b864",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a7e3b9f1-5be7-4a03-bece-6c186bd66146",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "a7e537a3-d460-486f-adc6-66328cb35345",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "9c04f6ec-3e4d-4e86-acc2-35061ffc70e1",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "b5451302-2e86-4975-9363-fa1afe99c553",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "f635d61b-c8f4-4ce1-a47e-32ba0b5f9876",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "064a5d4a-9c28-4561-86ba-7fcf6627e559",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "112eaa05-388b-4272-bcb0-e69f52050263",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "0b4ea897-02e2-47fe-9572-da814c75698f",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "053a5fea-438b-449f-bb1b-98aa5e379580",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7d1187ca-5f97-4472-a86d-6c0fb97fceb6",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "cd0cc8c3-37a6-4b69-bb05-07fee5209daf",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f70a8edf-1e43-4394-aeab-b839d85db8be",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a81eeb3d-0a99-44c5-8419-8318e37ce8b1",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1366a758-7162-43bd-8254-d097c66f401f",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "93352213-16aa-46aa-9d3e-841d4245c6b0",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0b9eea95-6599-4a79-a383-1713ab214222",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d02b4b8d-1e09-42af-ae61-5426c3ffe036",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "65d8cc8d-96fc-4ce0-a5aa-3236ab37e992",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ecc9eb2a-a01d-4ff8-87a3-8580fd5fef6c",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "205cdfbe-9a33-47b0-97fb-a977eb6b472d",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e824ff4f-bb2d-4f3a-af1e-0bc51764cb65",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "97c70d25-e07c-4641-9b9d-bc7aa07f76d7",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1ca60f04-9165-4017-b2fe-8841bd6be0ad",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "15d965c8-0cf5-4c3e-b7d9-52fa09f139a1",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "xXSSProtection": "1; mode=block",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "c16b68b5-b103-4dc4-bee0-bef62b2a9da2",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": ["true"],
            "client-uris-must-match": ["true"]
          }
        },
        {
          "id": "9b35b121-cbbe-482f-b1e5-23f858522506",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "f60b6ffa-0c34-4e50-becf-2772e7858261",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "5a0b2ace-bff0-420e-8bee-6ca0d2718860",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "452fe4d9-07db-43e5-a7a9-2328d95bd306",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "5689d35c-0ea6-47e1-aa57-d7bbb2517590",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        },
        {
          "id": "528fb204-5a6f-4945-b577-bfcb1021cb03",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "076b2fe2-cf3f-4271-ba51-e76128008a69",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "eedba068-85b2-4d7c-a41f-a31f87f05e67",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": ["b37d799b-d753-47d8-985c-87de353fec12"],
            "secret": ["Up2dAeKzknRQEwV-pjhn-A"],
            "priority": ["100"]
          }
        },
        {
          "id": "640147ba-51fe-4e39-a80a-68833b84d3a1",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": ["d4134b85-a65c-4344-87b7-46643c84ae2f"],
            "secret": [
              "6xIJ8dVuHiD2omjxQDdQvHK4ixxIcNkgDBJmbFZwg7aDyB63-N4EqOGsTVsCwqvQoILauvVa5X_t6BYjKHkBqw"
            ],
            "priority": ["100"],
            "algorithm": ["HS256"]
          }
        },
        {
          "id": "331ea827-c51e-4b56-b50d-c5d06518072c",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAjGAH/kpqt2xTvCIWaKZ9X/raxDN8i6NpLE8MczxNLAz4h5VvFK0mEE9a/hROG5wmCllNiq+6vnktNPknZ1+SMZwA59MjDOKwXvPBhTsn7fcrIW0v/NBGQbPJAVAfLeMPO+zd5W00mBNcP6UWvN6f4SVkVRJBFT8GXwX9k8gorM8svdTsUn82YS+BtJNlmMv0VPfDsA9n68SqAK3OAsOvxB5IUSjfD7aE24eLR7b4UP7nQTeRL+IHxW0L9QQtyDth12iIlVa74askzj09JDKYaUBmS+OCacFI1NhJ7y1n78wI0gFlnUEWeYd40OVKsTSUmyG8Ro0Ff8eCeGcLGSKrbwIDAQABAoIBAE9ASEMAsI8t0Xh9pjkfBdmSPsBWcRJFB7PETTsh6E/eYtHpQ/VgbAT5SF36CL79wVxGXsjVvZCbyTIHGH/8LQVlFf3L7hXwRbLV24Pkif6HdQpCIr2QuJmPbwQWwAOgFZG3gO9uYCsbgxFLmzK2XX03JxYAYE4mbupm72rnrk8hMDCRWbiA2x4O3/6AiFvkV0wc0SvRfR9UZZIR37zjjjnY+jLJfJew5zC48+RBe07xRdmhBlreegsP2Sm8P42v+Jk+BbVgy3bvxywnnMMna+B5Jlt/YjyqnY4hdHwiL3hM+6GYRcT02rLtVw566j5bGnHQigzV5VblwoXgpMOk8oECgYEA2D/GQa6q3sbbJhFWz9UwTYdrGz2kWJu5PK8zGsZr64ktmCmjrY6jmUaNwt01HjqeCjD0Lu9/bfOwsXWll5jWa+p//HwBQPbhV+OkDb1YS4T0gR0QiHUn1xCkpERkHK0hn1RBM53MK9qsMSlNaNHsNMb/5cBZ0dy3B6UE3/c0xWcCgYEApi3JhFLxfMBJaXAy9jX8muY1KpLV78/lT7dGNuzV5AUWvekrTpxhI7Jr8NeDIMSl6KrP3ZpMNHXW5JaUYRb820sD5ekiG7b0/NLOQsFvF2xQuAoWIhzOZng2EIMNoMLUHqqAxF2zr/MZ3lmW77OEpXtiISfv4SFazowRq1oZXLkCgYEAoIZO3GkVjEPfYBXU9HiT36lbl6AdhG0sh2Citgh/ChwNjXuzdd2BkgEusG1WxfbLZFNMoB7G4E7aZhEn+C3LVdaAZWOD5r6dLoncORrKFV0/xyxVHoahKWPAY/QkwKjAYa7Aq9lCO3ebBO9c+CeEiPUD9n/f7QpDj9gukzbFpJcCgYEAhPbh5QTQwHbCxqDFxgcQZYiJRdVTZJy96HjGr6/0vIvt1Gq7Ah1SBFQA1iY6f3+ZGH+D7tZE3zziguiRNNZF39k390AA0Jglkh3Cd9t6Xg2G0JsRdp4B8C+DYtbZkqYRP7BBc91dpw0mx6h7grPrENWWgN0JrOMZW2brxGVFIdECgYAfPtmh2KGUSw0Coxlse/YGVv6GVt/e6xXc0/M3uKPufiCguLUWD0Lpdm/Pog90/rRQDXk0f7/Fp4SaHMkaepEqjFu0rhMUHv6C5HuKiLQgvfDESDWreN0AHCIP9fwi7QmdkVUM3aS8iv0YSb9a0k9T8Ou3A2Iuzcn673+KnL571g=="
            ],
            "certificate": [
              "MIICmzCCAYMCBgFxBI2I+DANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjAwMzIyMjMyMDE2WhcNMzAwMzIyMjMyMTU2WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCMYAf+Smq3bFO8IhZopn1f+trEM3yLo2ksTwxzPE0sDPiHlW8UrSYQT1r+FE4bnCYKWU2Kr7q+eS00+SdnX5IxnADn0yMM4rBe88GFOyft9yshbS/80EZBs8kBUB8t4w877N3lbTSYE1w/pRa83p/hJWRVEkEVPwZfBf2TyCiszyy91OxSfzZhL4G0k2WYy/RU98OwD2frxKoArc4Cw6/EHkhRKN8PtoTbh4tHtvhQ/udBN5Ev4gfFbQv1BC3IO2HXaIiVVrvhqyTOPT0kMphpQGZL44JpwUjU2EnvLWfvzAjSAWWdQRZ5h3jQ5UqxNJSbIbxGjQV/x4J4ZwsZIqtvAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAB9oylrdAR9MCMyj287l6Vb8+Yd8CbSbMbtQR0GPBHy5jtlxPXdb3JGRn0l9F9dorNusZjGlf/9ilQx55lGvwvW1dYG66Ol7j7IKV3xAMdWJ2YNyasW95ck2YmvY5OkJ7C8KVkSfN02esXvutk98e1c/5+t9tlrSyeiTc9f0YLpJu/cGXjTBbUEfaCcfhhpI9JZxI1NbEdGiNR87eoD/fGAUKAB7wwPTWHJNxuZmw9tBfh9NBJlUbGd1nu3dqShGjwBvvYo8Ub8oa1gMBLBIz9ue0G0Q0+PyUYlxwr7eVTV0+SnlH9FIlyj5rfKytieOLj2oFxX5WPTyMJhvURpGnQw="
            ],
            "priority": ["100"]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "1d513b2b-fd83-4e6d-becd-c87db1e90cb8",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "6b93c136-7b11-47da-ad23-ce00bc3856aa",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "3a42117b-e229-416d-b661-ca2a4089dfb9",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "4d49f32b-5121-4e41-a3cb-16d55700ecce",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "117ab545-7c5a-498f-9351-4baef99698e1",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "202e0060-252f-456a-9739-b029d3088133",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f5df27b4-dcd9-4248-ae5f-6920bb671a89",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "20321261-1b68-4589-ac21-6f4207e1a635",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f85b8e5e-28f8-4a1b-9aaf-2f8a0983e05e",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "a47e2a22-1444-4057-acd3-470ba2d69b17",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d17cbaf5-5325-4536-a15c-5cd052fb7915",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "cdcd85d6-d0c1-4634-aa01-57b9be08619d",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "308a2249-0616-418b-ba8b-7e44b211051f",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "fc996a74-97ed-43de-a35b-fec57ddc8f1b",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "6e9c0de9-77e9-4356-94da-0e701ef98f95",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d6efa2e0-6bee-4e9c-86cf-ae856539f320",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "49095535-9338-4586-8876-9694e258fc76",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "e2ed8a2d-4927-4c0d-af51-03edda25aabe",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "79647d3e-00c0-4232-92a6-5ce784a1bbf9",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "14cb2867-cf04-4608-a545-5164fdf1dc16",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "5d728292-7a8b-414f-846a-efc1b331bd9a",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "101efb74-dc82-4c5e-a58a-7da1c11c057f",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "_browser_header.xXSSProtection": "1; mode=block",
      "_browser_header.xFrameOptions": "SAMEORIGIN",
      "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
      "permanentLockout": "false",
      "quickLoginCheckMilliSeconds": "1000",
      "displayName": "Keycloak",
      "_browser_header.xRobotsTag": "none",
      "maxFailureWaitSeconds": "900",
      "minimumQuickLoginWaitSeconds": "60",
      "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
      "failureFactor": "30",
      "maxDeltaTimeSeconds": "43200",
      "_browser_header.xContentTypeOptions": "nosniff",
      "offlineSessionMaxLifespan": "5184000",
      "_browser_header.contentSecurityPolicyReportOnly": "",
      "bruteForceProtected": "false",
      "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "waitIncrementSeconds": "60",
      "offlineSessionMaxLifespanEnabled": "false"
    },
    "keycloakVersion": "9.0.0",
    "userManagedAccessAllowed": false
  },
  {
    "id": "stayhome",
    "realm": "Stayhome",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 7200,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": true,
    "registrationEmailAsUsername": true,
    "rememberMe": true,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "0b711c91-58d4-45bb-ae92-3522bf65520f",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "stayhome",
          "attributes": {}
        },
        {
          "id": "30107d88-8dc9-49ea-a1da-b4b0e06169d4",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "stayhome",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "a59a08ea-1312-4f8f-8eca-5575792365fd",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "ea452a25-0100-4ac4-b3ee-2d2a68780541",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "f9310591-ef67-42cb-9786-48186ac05818",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "553022f3-b883-4184-bbc5-27b87d78f326",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "0d556cc3-734f-4afd-87cc-08e69e427173",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "4339da46-87d2-4646-9354-b82785677065",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "8961cd29-8716-4a3a-aaa9-64f3d88d0c53",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "ad7458b2-3e4b-4da9-b181-8dafa3bf828d",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "5ec4320e-08f2-402f-88f5-6dbf1d74a0d8",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "ff2507ce-aa8d-4790-ae6f-8739218df3c0",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "5a4658ae-fcf7-48b9-af1b-be4bb06c4d4c",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": ["query-users", "query-groups"]
              }
            },
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "3aad63c3-541c-4047-bf77-98dd3d8ade97",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "333d829e-17f0-486e-aa83-e8bbf629298c",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "13a3b033-7d17-48c1-b336-4f8b519929c0",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "e8420c9c-fa98-43d9-88bb-4705a1779787",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "manage-clients",
                  "view-realm",
                  "manage-users",
                  "query-realms",
                  "manage-realm",
                  "query-users",
                  "query-groups",
                  "manage-events",
                  "view-authorization",
                  "manage-identity-providers",
                  "view-users",
                  "manage-authorization",
                  "create-client",
                  "view-identity-providers",
                  "query-clients",
                  "view-events",
                  "view-clients",
                  "impersonation"
                ]
              }
            },
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "7c9ac888-4ca3-4e7c-a997-6f17f1c019d7",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "4d042102-ad31-409e-b183-608ea2a84060",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "74492d75-394c-4dad-be1c-17bf78747187",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": ["query-clients"]
              }
            },
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          },
          {
            "id": "9313a411-2f6d-497b-a914-9e0e156b0867",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
            "attributes": {}
          }
        ],
        "stayhome_openid_client": [],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "f1f29291-3c6d-4981-b673-860701dc36f2",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "c36f353d-badb-4fa9-8c3a-5af42c6fff81",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "553779c6-eb14-4151-93bc-6f2b5951ba83",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["manage-account-links"]
              }
            },
            "clientRole": true,
            "containerId": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
            "attributes": {}
          },
          {
            "id": "7b7f0801-669a-445e-a813-b1f6bf7f1e5f",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
            "attributes": {}
          },
          {
            "id": "f2fc8d01-fbfa-49d7-8fe6-0f9fc5fdc5fe",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
            "attributes": {}
          },
          {
            "id": "758c705e-4a3b-4b4a-a4d3-607aa76997c8",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": ["view-consent"]
              }
            },
            "clientRole": true,
            "containerId": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
            "attributes": {}
          },
          {
            "id": "3dcd1434-36eb-4806-91ba-8abbb42f94a2",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
            "attributes": {}
          },
          {
            "id": "5f0b0387-474c-4ce1-999d-5f5e5fb595e4",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": ["uma_authorization", "offline_access"],
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "794d2782-e783-4cbb-ae72-b165a4c06e7f",
        "createdTimestamp": 1584919351977,
        "username": "test",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "credentials": [
          {
            "id": "c36d2cb1-dd7c-4c9c-b2f5-759fe0aab61b",
            "type": "password",
            "createdDate": 1584919358838,
            "secretData": "{\"value\":\"uSyIKjcI8LVliFnBxocUe/t5G/lhfv4Olb4+oC/OVboCk0F/d9RUTlXElSZ1LhqBw61ZWJZ8jt3wCqoLbP/62w==\",\"salt\":\"6CZQmxvpA2eGTuwolojlYw==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": ["uma_authorization", "offline_access"],
        "clientRoles": {
          "account": ["manage-account", "view-profile"]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": ["offline_access"]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": ["manage-account"]
        }
      ]
    },
    "clients": [
      {
        "id": "aeec6030-81e1-4eb2-85ad-b2e149bc9dcb",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/Stayhome/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "defaultRoles": ["manage-account", "view-profile"],
        "redirectUris": ["/realms/Stayhome/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "74035769-8a21-49e7-9032-76a92f339cae",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/stayhome/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": ["/realms/stayhome/account/*"],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "9bed0b82-84e6-4986-b98a-3dd8f3553f67",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "9812b6e1-f578-467b-b13f-d02421b41f2c",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c36f353d-badb-4fa9-8c3a-5af42c6fff81",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a5c7f2c8-234a-4414-a9ed-0745c94e13cb",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "324f6a9d-95e7-4dac-8998-7fe40d513df7",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/Stayhome/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "**********",
        "redirectUris": ["/admin/Stayhome/console/*"],
        "webOrigins": ["+"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "e791aa2c-f4fb-4e54-9104-06c7820de88e",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "e1e8c399-f31a-436c-8874-33e93759580f",
        "clientId": "stayhome_openid_client",
        "name": "Stayhome",
        "description": "Stayhome app to support home monitoring in voluntary quarantine",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "92e9861c-a2f3-40dd-8872-e2ee57a55afe",
        "redirectUris": ["*"],
        "webOrigins": ["*.local.stayhome.app"],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "login_theme": "stayhome",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "a25e6d0c-4c0a-4106-9699-2113596a0fe0",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "debf781f-5e1e-46b3-a8c7-3908d9dfadaa",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "053622e9-f076-41a3-a00f-776ada39e9e4",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "d18d2cb5-b102-4229-a958-4870bbc3e6cb",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "52428740-7ce4-45e1-8cf6-5ed7bd28262f",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "37006346-f599-418e-9725-adb9230d8c47",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2d1a7265-9008-4a4d-b72f-d6afe1fd303e",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "a32d2dce-410c-4cd9-b512-f5707bb8b4a8",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "5c8142b5-e8e1-4fa7-aa8d-3879fc2843a8",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "9e7b835c-db77-4af9-affc-fa931445479d",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "de328838-1fcb-4934-a173-8d713675afbf",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "b44e936e-f184-4f72-943b-c5c90afcaba0",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "12ec0212-052e-453b-98e1-df86c3dbcbd9",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "38bfa2f1-8cc9-4894-8f3d-f56f206d5f27",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "616c17f3-efc9-4439-b1cb-b1ef175c938f",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "c7ac504a-79b3-4adf-a069-888e97c3fff2",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3ba8fff2-84fe-4468-bd4b-860398b9a178",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "b7ccc40f-8a26-43a9-96bb-830d349cffe8",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "bd100a66-44d6-48bf-9479-330362d41ab3",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "78ff297a-2c72-4b20-a42b-25fe47075fd0",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d6dc9891-e464-43bb-883f-b86a927c640d",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e5f66b3c-2d45-4294-9b25-c3215e6ec043",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9d60f6b6-8834-4d22-a41b-d3638fc3db13",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e5a41dfe-adb7-4e79-adc8-ea0695eeba35",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0525b33b-6c02-422e-a9a5-b1b53ecf72aa",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "047ad760-9c17-4f13-9301-bead5eecf59c",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c29e1b75-a207-4938-add2-27e9421956ed",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "75a571ee-90a9-42d3-bcb1-9e6c8f1b5e53",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "978a7e9b-f8ab-4267-8e9f-4f87c71953df",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e162dfe2-1ad3-429e-8949-888017c2bb85",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8f7e6395-fecc-4dd5-9099-07995c6296e4",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a0b49522-6b3a-429e-86f5-10a22518b65a",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "00308c42-c9b7-4aa4-b60d-344ec69cce38",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "f82aef1c-533e-48d5-8a88-647dce12293e",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "71ea9b80-784c-4fc2-b1b6-98681ad072d7",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
      "replyToDisplayName": "CIRG Support",
      "starttls": "",
      "auth": "true",
      "envelopeFrom": "noreply@stayhome.cirg.washington.edu",
      "ssl": "true",
      "password": "**********",
      "port": "465",
      "host": "mail.cirg.washington.edu",
      "replyTo": "support+stayhome@cirg.washington.edu",
      "from": "noreply@stayhome.cirg.washington.edu",
      "fromDisplayName": "Stayhome",
      "user": "keycloak-stayhome@cirg.washington.edu"
    },
    "loginTheme": "stayhome",
    "accountTheme": "base",
    "adminTheme": "base",
    "eventsEnabled": true,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [
      "SEND_RESET_PASSWORD",
      "UPDATE_CONSENT_ERROR",
      "GRANT_CONSENT",
      "REMOVE_TOTP",
      "REVOKE_GRANT",
      "UPDATE_TOTP",
      "LOGIN_ERROR",
      "CLIENT_LOGIN",
      "RESET_PASSWORD_ERROR",
      "IMPERSONATE_ERROR",
      "CODE_TO_TOKEN_ERROR",
      "CUSTOM_REQUIRED_ACTION",
      "RESTART_AUTHENTICATION",
      "IMPERSONATE",
      "UPDATE_PROFILE_ERROR",
      "LOGIN",
      "UPDATE_PASSWORD_ERROR",
      "CLIENT_INITIATED_ACCOUNT_LINKING",
      "TOKEN_EXCHANGE",
      "LOGOUT",
      "REGISTER",
      "CLIENT_REGISTER",
      "IDENTITY_PROVIDER_LINK_ACCOUNT",
      "UPDATE_PASSWORD",
      "CLIENT_DELETE",
      "FEDERATED_IDENTITY_LINK_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN",
      "CLIENT_DELETE_ERROR",
      "VERIFY_EMAIL",
      "CLIENT_LOGIN_ERROR",
      "RESTART_AUTHENTICATION_ERROR",
      "EXECUTE_ACTIONS",
      "REMOVE_FEDERATED_IDENTITY_ERROR",
      "TOKEN_EXCHANGE_ERROR",
      "PERMISSION_TOKEN",
      "SEND_IDENTITY_PROVIDER_LINK_ERROR",
      "EXECUTE_ACTION_TOKEN_ERROR",
      "SEND_VERIFY_EMAIL",
      "EXECUTE_ACTIONS_ERROR",
      "REMOVE_FEDERATED_IDENTITY",
      "IDENTITY_PROVIDER_POST_LOGIN",
      "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
      "UPDATE_EMAIL",
      "REGISTER_ERROR",
      "REVOKE_GRANT_ERROR",
      "EXECUTE_ACTION_TOKEN",
      "LOGOUT_ERROR",
      "UPDATE_EMAIL_ERROR",
      "CLIENT_UPDATE_ERROR",
      "UPDATE_PROFILE",
      "CLIENT_REGISTER_ERROR",
      "FEDERATED_IDENTITY_LINK",
      "SEND_IDENTITY_PROVIDER_LINK",
      "SEND_VERIFY_EMAIL_ERROR",
      "RESET_PASSWORD",
      "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
      "UPDATE_CONSENT",
      "REMOVE_TOTP_ERROR",
      "VERIFY_EMAIL_ERROR",
      "SEND_RESET_PASSWORD_ERROR",
      "CLIENT_UPDATE",
      "CUSTOM_REQUIRED_ACTION_ERROR",
      "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
      "UPDATE_TOTP_ERROR",
      "CODE_TO_TOKEN",
      "GRANT_CONSENT_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "adminEventsEnabled": true,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "40624057-261c-4df9-a005-37fd94f7cad9",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": ["true"],
            "client-uris-must-match": ["true"]
          }
        },
        {
          "id": "b5c95b69-8850-48a5-8cc1-7fa41d4a6d9d",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        },
        {
          "id": "32a24ccb-cbcd-4f07-8dd7-046c84b87af6",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": ["200"]
          }
        },
        {
          "id": "abad635c-194e-4420-b413-0abd91c092fa",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "47523d12-55d3-4622-9092-0eca7d0ec6a1",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper"
            ]
          }
        },
        {
          "id": "43aaef85-3202-445c-ae5f-5fe0ca5668ad",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "17f3c04b-0040-490b-bb7c-52284f8c37b1",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "saml-role-list-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "c7263aaa-f4e3-48dc-b607-78f4c7ec1d10",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": ["true"]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "cddd331c-32b4-409b-951d-a6a21240e61f",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": ["f0d3240c-0320-427c-b307-56c9c1dcf34e"],
            "secret": ["n-_JfDuigQ8bd71LLeAUtg"],
            "priority": ["100"]
          }
        },
        {
          "id": "1b0404e9-a721-4bbb-a261-c30b203eeba6",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpgIBAAKCAQEA32V0Qb/oKMLTmuoKB13IBhmvN/JIBANnuIp7APeIys3veoL/uSGbBpoSRcjqtLs4g2wqzOnEv+ZiFdd/9dnPJ1VR1L/C+JmL7VUi6tlgJWkEignh54NV8qS1eqZkOCwDZE0rAWZHrf0xhlib5pbL39maz4OCwlgG1uHy5w2RpAGnxB5uF2DxorMEfGm1eHyPgQsMx07YhQQWtqwo65QsZtgcbc8gCOKOP/+l5ehvBZIOgoEdxUJ81/opvPS9F1Hhh/P31IcfAf2AaczdXORCrI/4ZgSurco87jpeA+x0P4aQZd9fG4CtsQc/UUs4AxkoTbw0nH7Edf+2EI+ypOHjowIDAQABAoIBAQCl4ZfqGq4xVjn6lj7MKX8VyIyrZmTDViP2jB26IhSZQ0HIHu30clfDFzTqTL67ZSoZrIA7mHpYZKIAxfxmek2wT1JsP9hu8NVObiF3ceJK5ShRt/TfDE8N1fBMGrHgZA5AtGxypZgkQhY8RB+/ocnRdqvV2zmFRggOF8leeFzlAlIfkFHhOuUbmfbEg20Ma72qJrwhQs8gY9LtE92qk/dLiiWIBpGBVp6qbu05dBwk2MaNn02nu6xCHaU9qwVNFqMkewITjF93gKypnNmVznfdj/9UpPogBfamd6HanrP6V0JlpfW7JRgIIKf+EwouE2bqamcs0atksCy0wsrM2dkBAoGBAPqESSTLmqhaUxy0dsBMf9UDRYoYsuf8tyv4FdAGDxwetXXUDopY4Eii9pH3IA1B2zTklF7dRrD5ERuKSfZ89z2wsCZXahTzD+bDmuEP2mIY+SNGu+1yDBccU0EU0Z31vbuSMe2KPwUKA5NdrNLumsk75UVFNHa0WMLkgphlzhGxAoGBAORJNIQUc03rf8A6yT5mT+sm7ZV+bY93/4xYHi57y4DRfdeeG4Vxg0LJyLC80kjNqZNYHi2CYnYoAEob2x2BwYkPCV7br3o8NdZddx0SHriowidfe4Pj0+mS3oauNSWyOJ/8KTJEOhvk9YfZjW72y3Gj8zUUPsV+2GRPswtEJSuTAoGBAPfcLqpTMF/ljlnWS7ATgF73b7Qkn85cAbdlK9+4Pvbpg0xjVUeYi8ASTLc6tOGpCQOaLRp3AFxU8ZI4Dtnr5ouI55/n2TOFEXSWkAShtMZeQxGeCI3zyvaKteysdoE9BE4zZWbK43NO5x7FDhtcrJTxx/PzducDpNafVH8IKwzhAoGBANhgYryGPbwvaUkk7zaL91gl769wxBvmW3wE0aaxg/Q3nJXQsLlNHGMjq2uJra9/8ClOrlvoZ7citxOHT6qqIGzuqa0VgT/U7hqfQJV3ZVMV8eEr6YDbYzLTGMSDPrDaOj253rpcXM+vtuHq3Nm+ZpryEUXQSKcdUbHSsRwOnUStAoGBALK/XN0bi29cP6DSlRwOnmRa/T7vGgm5UqDWloijfksXG+0cmcoIvZhddzcag4MnMbCJROvBOXqWu9EFLE8fPoG4utxGpBxb7VyCaMZOw/CISk3Rd/ywf/4yHpxT0S641v/dxhR5nhkLRceGN3Pa6A4rrLkD89n8xwa87C+o3vgd"
            ],
            "certificate": [
              "MIICnzCCAYcCBgFxBI2REDANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhTdGF5aG9tZTAeFw0yMDAzMjIyMzIwMThaFw0zMDAzMjIyMzIxNThaMBMxETAPBgNVBAMMCFN0YXlob21lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA32V0Qb/oKMLTmuoKB13IBhmvN/JIBANnuIp7APeIys3veoL/uSGbBpoSRcjqtLs4g2wqzOnEv+ZiFdd/9dnPJ1VR1L/C+JmL7VUi6tlgJWkEignh54NV8qS1eqZkOCwDZE0rAWZHrf0xhlib5pbL39maz4OCwlgG1uHy5w2RpAGnxB5uF2DxorMEfGm1eHyPgQsMx07YhQQWtqwo65QsZtgcbc8gCOKOP/+l5ehvBZIOgoEdxUJ81/opvPS9F1Hhh/P31IcfAf2AaczdXORCrI/4ZgSurco87jpeA+x0P4aQZd9fG4CtsQc/UUs4AxkoTbw0nH7Edf+2EI+ypOHjowIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAOaE1fH3eJx64X9wzfl0w4/s+hKQzlelji9VFgUnhgrscJP10IXXAlaqIOkBHNjzswa3CNntBRVgyYQNrimaVPCwn9S5Ea9oTdxgbXX017lWizUOqfAyFKfwAp5y5TJkALswneVicrTR5zCaaeT6UetvItjQ/YFZYtcLG8+3gUaDPqxD4g/JcC51BMrZ+//rEiud/87mQjahgXjP0tiz9x+6C9/+OlIWaeBcSfngBPephrwI+n+fJdWcqZWkhwZ55uP7Cs3R42yPPpA7KAkKqx/n6WjX+WNEb50V1jX6+f91ledS17otFq+j5dbS7n6sXF2TEt5Yd6G6RfOwxv7RG2"
            ],
            "priority": ["100"]
          }
        },
        {
          "id": "99fae396-1588-420e-85de-5151085a5015",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": ["c91e194a-1103-4a3b-b0d6-62f0af7343e1"],
            "secret": [
              "6LBUoqJ7J7GB0_JAGYyXMGHOvpXFrVKKClpwPbVX6FDY0BdrBKZjeGLHR3qKUIqsSAZ2WkmX3pKG2sIgSZM8Iw"
            ],
            "priority": ["100"],
            "algorithm": ["HS256"]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [""],
    "authenticationFlows": [
      {
        "id": "307f4b58-9605-4069-9945-61385f8f75b6",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "7b7e5e11-28a7-419d-a99b-3bdadce26401",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "d5f0225e-d89a-4aea-a443-d0c293472725",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "fc31b5b1-9df2-48f7-9432-f8076e3ea69d",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "d8042712-2495-4fba-900a-02257d4835f7",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "9cc06563-5422-4e74-9503-e2369ea79676",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "94cf8f3b-b490-46f1-af99-ba5ba47252e5",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "eed97784-4a11-42e1-ae14-8cd7da225ba3",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "f06bd310-071a-4c69-9d45-fbc556963272",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4e47cab2-516a-4e13-b691-64bf87f1445f",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "d0c6b9f0-a203-4667-9752-8bc4363f506e",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "1f381d74-5bf8-4378-be92-a77b08c30c91",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "e3546197-c27c-4acb-8eca-857d7b0c4453",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "7a9a2174-4f2e-4d78-90b0-3a88052468a3",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "8c504083-58a0-4dad-93b7-0b0c34ca0c2f",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "659f353b-cbde-4512-ad43-a0db4648bbeb",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "35e1a014-093a-41a7-b492-e6962732008f",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "66dd8b9e-a106-4f36-8638-986983d6a197",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "DISABLED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "407cac7a-740c-4a67-9b89-67f11208284d",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "8ac802ee-a0a9-4d13-a73d-d44d622ad067",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "169dd437-4f81-4ac1-b64c-da59ad8578ff",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "98df306a-2198-4d55-bfbd-aa406a03882f",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": true,
        "defaultAction": true,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "_browser_header.xRobotsTag": "none",
      "webAuthnPolicyAttestationConveyancePreferencePasswordless": "not specified",
      "webAuthnPolicyRequireResidentKeyPasswordless": "not specified",
      "webAuthnPolicySignatureAlgorithmsPasswordless": "ES256",
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicyAvoidSameAuthenticatorRegisterPasswordless": "false",
      "failureFactor": "30",
      "webAuthnPolicyAuthenticatorAttachmentPasswordless": "not specified",
      "actionTokenGeneratedByUserLifespan": "300",
      "maxDeltaTimeSeconds": "43200",
      "webAuthnPolicySignatureAlgorithms": "ES256",
      "webAuthnPolicyRpEntityNamePasswordless": "keycloak",
      "offlineSessionMaxLifespan": "5184000",
      "_browser_header.contentSecurityPolicyReportOnly": "",
      "bruteForceProtected": "false",
      "webAuthnPolicyRpIdPasswordless": "",
      "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "_browser_header.xXSSProtection": "1; mode=block",
      "_browser_header.xFrameOptions": "SAMEORIGIN",
      "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "permanentLockout": "false",
      "quickLoginCheckMilliSeconds": "1000",
      "webAuthnPolicyCreateTimeout": "0",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "maxFailureWaitSeconds": "900",
      "minimumQuickLoginWaitSeconds": "60",
      "webAuthnPolicyCreateTimeoutPasswordless": "0",
      "webAuthnPolicyAvoidSameAuthenticatorRegister": "false",
      "webAuthnPolicyUserVerificationRequirementPasswordless": "not specified",
      "_browser_header.xContentTypeOptions": "nosniff",
      "actionTokenGeneratedByAdminLifespan": "43200",
      "waitIncrementSeconds": "60",
      "offlineSessionMaxLifespanEnabled": "false"
    },
    "keycloakVersion": "9.0.0",
    "userManagedAccessAllowed": true
  }
]
